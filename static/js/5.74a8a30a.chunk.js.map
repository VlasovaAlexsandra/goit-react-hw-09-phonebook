{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","Views/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","CardActionArea","React","props","ref","children","classes","className","focusVisibleClassName","other","_objectWithoutProperties","ButtonBase","_extends","clsx","root","focusVisible","focusHighlight","withStyles","theme","display","textAlign","width","opacity","palette","action","hoverOpacity","overflow","pointerEvents","position","top","right","bottom","left","borderRadius","backgroundColor","transition","transitions","create","duration","short","name","styles","form","label","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","setName","email","setEmail","password","setPassword","onSubmit","e","preventDefault","authOperations","register","style","autoComplete","type","onChange","evt","target","variant","color"],"mappings":"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","file":"static/js/5.74a8a30a.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { authOperations } from '../redux/Auth/index'\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n    form: {\r\n        width: 320,\r\n    },\r\n    label: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        marginBottom: 15,\r\n    },\r\n};\r\n\r\nexport default function RegisterView() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [password, setPassword] = useState('');\r\n\r\n     const handleChangeName = evt => {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n     const handleChangeEmail = evt => {\r\n        setEmail(evt.target.value)\r\n    }\r\n\r\n    const handleChangePassword = evt => {\r\n        setPassword(evt.target.value)\r\n    }\r\n    \r\n      const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(authOperations.register({name, email, password}))\r\n        setName('')\r\n        setEmail('')\r\n        setPassword('')\r\n    };\r\n\r\n        return (\r\n            <div>\r\n                <CardActionArea>\r\n                    <h1>Страница регистрации</h1>\r\n\r\n                    <form\r\n                        onSubmit={handleSubmit}\r\n                        style={styles.form}\r\n                        autoComplete=\"off\"\r\n                    >\r\n                        <label style={styles.label}>\r\n                            Имя\r\n            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={name}\r\n                                onChange={handleChangeName}\r\n                            />\r\n                        </label>\r\n\r\n                        <label style={styles.label}>\r\n                            Почта\r\n            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleChangeEmail}\r\n                            />\r\n                        </label>\r\n\r\n                        <label style={styles.label}>\r\n                            Пароль\r\n            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={handleChangePassword}\r\n                            />\r\n                        </label>\r\n\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            type=\"submit\">\r\n                            Зарегистрироваться\r\n                        </Button>\r\n                    </form>\r\n                </CardActionArea>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n"],"sourceRoot":""}