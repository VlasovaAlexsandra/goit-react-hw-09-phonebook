{"version":3,"sources":["redux/Contacts/contacts-actions.js","redux/Auth/auth-operations.js","redux/Auth/auth-selectors.js","redux/Auth/auth-reducer.js","redux/Contacts/contacts-reducer.js","redux/Auth/auth-actions.js","components/Container/Container.js","components/Navigation.js","components/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/Contacts/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","toggleContactRequest","toggleContactSuccess","toggleContactError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logOut","logoutRequest","logoutSuccess","logoutError","logIn","loginRequest","loginSuccess","loginError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","initialUserState","email","createReducer","_","payload","setError","error","combineReducers","items","filter","contact","id","map","loading","styles","container","maxWidth","marginLeft","marginRight","paddingLeft","paddingRight","Container","children","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggeIn","useSelector","authSelectors","to","exact","style","activeStyle","alignItems","avatar","UserMenu","useDispatch","onLogOut","useCallback","authOperations","src","alt","width","Button","variant","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","isLoggenIn","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","fallback","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed32d429.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest')\r\nexport const fetchContactSuccess = createAction('contacts / fetchContactSuccess')\r\nexport const fetchContactError = createAction('contacts/fetchContactError')\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest')\r\nexport const addContactSuccess = createAction('contacts / addContactSuccess')\r\nexport const addContactError = createAction('contacts/addContactError')\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest')\r\nexport const deleteContactSuccess = createAction('contacts / deleteContactSuccess')\r\nexport const deleteContactError = createAction('contacts/deleteContactError')\r\n\r\nexport const toggleContactRequest = createAction('contacts/toggleContactRequest');\r\nexport const toggleContactSuccess = createAction('contacts/toggleContactSuccess');\r\nexport const toggleContactError = createAction('contacts/toggleContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter')\r\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n    set(token) {\r\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    },\r\n    unset() {\r\n        axios.defaults.headers.common.Authorization = '';\r\n    },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n    dispatch(authActions.registerRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/signup', credentials);\r\n\r\n        token.set(response.data.token);\r\n        dispatch(authActions.registerSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.registerError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n    dispatch(authActions.loginRequest());\r\n\r\n    try {\r\n        const response = await axios.post('/users/login', credentials);\r\n\r\n        token.set(response.data.token);\r\n        dispatch(authActions.loginSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.loginError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n    dispatch(authActions.logoutRequest());\r\n\r\n    try {\r\n        await axios.post('/users/logout');\r\n\r\n        token.unset();\r\n        dispatch(authActions.logoutSuccess());\r\n    } catch (error) {\r\n        dispatch(authActions.logoutError(error.message));\r\n    }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n    const {\r\n        auth: { token: persistedToken },\r\n    } = getState();\r\n\r\n    if (!persistedToken) {\r\n        return;\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    dispatch(authActions.getCurrentUserRequest());\r\n\r\n    try {\r\n        const response = await axios.get('/users/current');\r\n\r\n        dispatch(authActions.getCurrentUserSuccess(response.data));\r\n    } catch (error) {\r\n        dispatch(authActions.getCurrentUserError(error.message));\r\n    }\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default { register, logOut, logIn, getCurrentUser };","const getIsAuthenticated = state => state.auth.isAuthenticated;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    getIsAuthenticated,\r\n    getUsername,\r\n};","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n    [authActions.logoutSuccess]: () => initialUserState,\r\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n    [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n    [authActions.registerError]: setError,\r\n    [authActions.loginError]: setError,\r\n    [authActions.logoutError]: setError,\r\n    [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n    [authActions.registerSuccess]: () => true,\r\n    [authActions.loginSuccess]: () => true,\r\n    [authActions.getCurrentUserSuccess]: () => true,\r\n    [authActions.registerError]: () => false,\r\n    [authActions.loginError]: () => false,\r\n    [authActions.getCurrentUserError]: () => false,\r\n    [authActions.logoutSuccess]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    user,\r\n    isAuthenticated,\r\n    token,\r\n    error,\r\n});","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\"\r\nimport {\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n    changeFilter,\r\n    fetchContactRequest,\r\n    fetchContactSuccess,\r\n    fetchContactError,\r\n    toggleContactRequest,\r\n    toggleContactSuccess,\r\n    toggleContactError\r\n} from './contacts-actions'\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [deleteContactSuccess]: (state, { payload }) =>\r\n        state.filter(contact => contact.id !== payload),\r\n    [toggleContactSuccess]: (state, { payload }) =>\r\n        state.map(contact => (contact.id === payload.id ? payload : contact)),\r\n\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [fetchContactRequest]: () => true,\r\n    [fetchContactSuccess]: () => false,\r\n    [fetchContactError]: () => false,\r\n\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n\r\n    [toggleContactRequest]: () => true,\r\n    [toggleContactSuccess]: () => false,\r\n    [toggleContactError]: () => false,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload\r\n})\r\n\r\nexport default combineReducers({ items, filter, loading })","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n    registerRequest,\r\n    registerSuccess,\r\n    registerError,\r\n    logoutRequest,\r\n    logoutSuccess,\r\n    logoutError,\r\n    loginRequest,\r\n    loginSuccess,\r\n    loginError,\r\n    getCurrentUserRequest,\r\n    getCurrentUserSuccess,\r\n    getCurrentUserError,\r\n};","import React from 'react';\r\n\r\nconst styles = {\r\n    container: {\r\n        maxWidth: '1440px',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        paddingLeft: '15px',\r\n        paddingRight: '15px',\r\n    }\r\n}\r\n\r\nconst Container = ({ children }) => <div styles={styles.container}>{children}</div>;\r\n\r\nexport default Container;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/Auth/index';\r\n\r\nconst styles = {\r\n    link: {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        padding: 12,\r\n        fontWeight: 700,\r\n        color: '#2A363B',\r\n    },\r\n    activeLink: {\r\n        color: '#E84A5F',\r\n    },\r\n};\r\n\r\nexport default function Navigation() {\r\n    const isLoggeIn = useSelector(authSelectors.getIsAuthenticated)\r\n\r\n    return (\r\n        <nav>\r\n            <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n                Main\r\n            </NavLink>\r\n            {isLoggeIn && (\r\n                <NavLink\r\n                    to=\"/contacts\"\r\n                    exact\r\n                    style={styles.link}\r\n                    activeStyle={styles.activeLink}\r\n                >\r\n                    Contacts\r\n                </NavLink>\r\n\r\n            )}\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../redux/Auth/index'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        marginRight: 4,\r\n    },\r\n    name: {\r\n        fontWeight: 700,\r\n        marginRight: 12,\r\n    }\r\n}\r\n\r\nexport default function UserMenu() {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const name = useSelector(authSelectors.getUsername)\r\n\r\n    const onLogOut = useCallback(() => {\r\n        dispatch(authOperations.logOut())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <img src=\"#\" alt=\"\" width=\"32\" style={styles.avatar} />\r\n            <span style={styles.name}> Welcome, {name}</span>\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                type=\"button\"\r\n                onClick={onLogOut}>\r\n                Logout\r\n        </Button>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { NavLink } from 'react-router-dom'\r\n\r\nconst styles = {\r\n    link: {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        padding: 12,\r\n        fontWeight: 700,\r\n        color: '#2A363B',\r\n    },\r\n    activeLink: {\r\n        color: '#E84A5F',\r\n    }\r\n}\r\n\r\nconst AuthNav = () => (\r\n    <div>\r\n        <NavLink\r\n            to=\"/register\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >\r\n            Register\r\n        </NavLink>\r\n        <NavLink\r\n            to=\"/login\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >\r\n            Login\r\n        </NavLink>\r\n    </div>\r\n)\r\n\r\nexport default AuthNav","import { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation'\r\nimport UserMenu from './UserMenu'\r\nimport AuthNav from './AuthNav'\r\nimport { authSelectors } from '../redux/Auth/index'\r\n\r\nconst styles = {\r\n    header: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        borderBottom: '1px solid #2A363B',\r\n    },\r\n}\r\n\r\nexport default function AppBar() {\r\n    const isLoggenIn = useSelector(authSelectors.getIsAuthenticated)\r\n    return (\r\n        <header style={styles.header}>\r\n            <Navigation />\r\n            {isLoggenIn ? <UserMenu /> : <AuthNav />}\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/Auth/index';\r\n\r\nexport default function PrivateRoute({\r\n    isAuthenticated,\r\n    redirectTo,\r\n    children,\r\n    ...routeProps\r\n}) {\r\n\r\n    const isLoggeIn = useSelector(authSelectors.getIsAuthenticated)\r\n\r\n    return (\r\n        <Route {...routeProps}>\r\n            {isLoggeIn ? (children) : <Redirect to={redirectTo} />}\r\n        </Route>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/Auth/index';\r\n\r\nconst PublicRoute = ({\r\n\r\n    isAuthenticated,\r\n    redirectTo,\r\n    children,\r\n    ...routeProps\r\n}) => {\r\n    const isLoggeIn = useSelector(authSelectors.getIsAuthenticated)\r\n    return <Route {...routeProps}>\r\n        {isLoggeIn && routeProps.restricted ? (\r\n            <Redirect to={redirectTo} />\r\n        ) : (children)}\r\n    </Route>\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport { Switch } from 'react-router-dom'\r\nimport AppBar from './components/AppBar'\r\nimport Container from './components/Container/index'\r\nimport { authOperations } from './redux/Auth/index'\r\nimport { useDispatch } from 'react-redux'\r\nimport PrivateRoute from './components/PrivateRoute'\r\nimport PublicRoute from './components/PublicRoute'\r\nimport './App.css'\r\n\r\nconst HomeView = lazy(() => import('./Views/HomeView'))\r\nconst RegisterView = lazy(() => import('./Views/RegisterView'))\r\nconst LoginView = lazy(() => import('./Views/LoginView'))\r\nconst ContactsView = lazy(() => import('./Views/ContactsView'))\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n\r\n        <Switch>\r\n\r\n          <PublicRoute exact path=\"/\" >\r\n            <HomeView />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute\r\n            path=\"/register\"\r\n            restricted\r\n            redirectTo=\"/contacts\" >\r\n            < RegisterView />\r\n          </PublicRoute>\r\n\r\n          <PublicRoute\r\n            path=\"/login\"\r\n            restricted\r\n            redirectTo=\"/contacts\"\r\n          ><LoginView />\r\n\r\n          </PublicRoute>\r\n\r\n          <PrivateRoute\r\n            path=\"/contacts\"\r\n            redirectTo=\"/login\">\r\n            <ContactsView />\r\n          </PrivateRoute>\r\n\r\n        </Switch>\r\n      </Suspense>\r\n\r\n    </Container>\r\n  )\r\n\r\n}\r\n\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\r\nimport logger from 'redux-logger'\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport contactsReducer from './contacts-reducer'\r\nimport authReducer from '../Auth/auth-reducer'\r\n\r\nconst middleware = [\r\n    ...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH,\r\n                REHYDRATE,\r\n                PAUSE,\r\n                PERSIST,\r\n                PURGE,\r\n                REGISTER,]\r\n        }\r\n    }),\r\n    logger]\r\n\r\nconst authPersistConfig = {\r\n    key: 'auth',\r\n    storage,\r\n    whitelist: ['token']\r\n}\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: contactsReducer\r\n    },\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nconst persistor = persistStore(store)\r\n\r\n// eslint-disable-next-line\r\nexport default { store, persistor }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/Contacts/store'\nimport 'modern-normalize/modern-normalize.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}